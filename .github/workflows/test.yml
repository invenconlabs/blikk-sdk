name: Go Test Suite

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.filter.outputs.go }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for file changes
        uses: dorny/paths-filter@v5
        id: filter
        with:
          filters: |
            go:
              - '**/*.go'

  unit-test:
    runs-on: ubuntu-latest
    needs: changes
    if: github.event_name == 'release' || needs.changes.outputs.go == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run Go Tidy
        run: go mod tidy

      - name: Run Unit Tests
        run: go test -v -json ./... > unit-test-results.json

      - name: Report Unit Tests
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Unit Test Results
          path: unit-test-results.json
          reporter: golang-json

  integration-test:
    # This job only runs when a release is created.
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: unit-test # Ensures unit tests pass before running integration tests on release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: Run Go Tidy
        run: go mod tidy

      - name: Run Integration Tests
        env:
          BLIKK_APP_ID: ${{ secrets.BLIKK_APP_ID }}
          BLIKK_APP_SECRET: ${{ secrets.BLIKK_APP_SECRET }}
        run: go test -v -tags=integration -json ./... > integration-test-results.json

      - name: Report Integration Tests
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Integration Test Results
          path: integration-test-results.json
          reporter: golang-json